
import { bonusButtons } from "@constants/buttons.const";
import { backToMenuKeyboard } from "@constants/keyboards.const";
import { Context } from "grammy";

export const bonusCommand = async (ctx: Context) => {
    // –¢–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    const claimedBonus: boolean = false;

    if (!claimedBonus) {
        // –ï—Å–ª–∏ –±–æ–Ω—É—Å –Ω–µ –±—ã–ª –∑–∞–±—Ä–∞–Ω
        const bonusDescription = `
üì¢ **–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 3 –∑–∞–ø—Ä–æ—Å–∞!**

–ù–∞ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ —ç–∑–æ—Ç–µ—Ä–∏–∫—É –∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—é, –∞ —Ç–∞–∫–∂–µ –Ω–∞—É—á–∏—à—å—Å—è –¥–µ–ª–∞—Ç—å —Å–≤–æ–∏ –¢–∞—Ä–æ —Ä–∞—Å–∫–ª–∞–¥—ã! üåü

–ü–æ–¥–ø–∏—Å–∞–≤—à–∏—Å—å, —Ç—ã –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏—à—å –±–æ–Ω—É—Å, –Ω–æ –∏ –±—É–¥–µ—à—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–∏–Ω–æ–∫ –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤.
        `;

        await ctx.reply(bonusDescription, {
            reply_markup: bonusButtons,
            parse_mode: "Markdown",
        });

        await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:", {
            reply_markup: {
                keyboard: backToMenuKeyboard.build(),
                resize_keyboard: true,
                is_persistent: true,
            },
            parse_mode: "Markdown",
        });
    }
    else {
        // –ï—Å–ª–∏ –±–æ–Ω—É—Å —É–∂–µ –±—ã–ª –∑–∞–±—Ä–∞–Ω
        const bonusDescription = `
‚õîÔ∏è –í—ã —É–∂–µ –∑–∞–±–∏—Ä–∞–ª–∏ –±–æ–Ω—É—Å
        `;

        await ctx.reply(bonusDescription, {
            reply_markup: {
                keyboard: backToMenuKeyboard.build(),
                resize_keyboard: true,
                is_persistent: true,
            },
            parse_mode: "Markdown",
        });
    }
}