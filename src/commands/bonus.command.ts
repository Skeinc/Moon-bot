
import { backToMenu } from "@actions/menu.action";
import { bonusButtons } from "@constants/buttons.const";
import { checkTelegramID } from "@utils/checkTelegramID.util";
import { Context } from "grammy";
import { sessionStateManager } from "../states/sessionState";
import { SessionStepsEnum } from "../enums/session.enum";

export const bonusCommand = async (ctx: Context) => {
    if(!await checkTelegramID(ctx)) {
        return;
    }

    const telegramId: number = ctx.from?.id!;

    if(!sessionStateManager.getSessionState(telegramId)) {
        sessionStateManager.setSession(telegramId);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–∏
    sessionStateManager.updateSessionState(telegramId, {currentStep: SessionStepsEnum.IDLE});
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    const claimedBonus: boolean = false;

    if (!claimedBonus) {
        // –ï—Å–ª–∏ –±–æ–Ω—É—Å –Ω–µ –±—ã–ª –∑–∞–±—Ä–∞–Ω
        const bonusDescription = `
üì¢ **–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 3 –∑–∞–ø—Ä–æ—Å–∞!**

–ù–∞ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ —ç–∑–æ—Ç–µ—Ä–∏–∫—É –∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—é, –∞ —Ç–∞–∫–∂–µ –Ω–∞—É—á–∏—à—å—Å—è –¥–µ–ª–∞—Ç—å —Å–≤–æ–∏ –¢–∞—Ä–æ —Ä–∞—Å–∫–ª–∞–¥—ã! üåü

–ü–æ–¥–ø–∏—Å–∞–≤—à–∏—Å—å, —Ç—ã –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏—à—å –±–æ–Ω—É—Å, –Ω–æ –∏ –±—É–¥–µ—à—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–∏–Ω–æ–∫ –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤.
        `;

        await ctx.reply(bonusDescription, {
            reply_markup: bonusButtons,
            parse_mode: "Markdown",
        });

        await backToMenu(ctx);
    }
    else {
        // –ï—Å–ª–∏ –±–æ–Ω—É—Å —É–∂–µ –±—ã–ª –∑–∞–±—Ä–∞–Ω
        const bonusDescription = `
‚õîÔ∏è –í—ã —É–∂–µ –∑–∞–±–∏—Ä–∞–ª–∏ –±–æ–Ω—É—Å
        `;

        await backToMenu(ctx, bonusDescription);
    }
}