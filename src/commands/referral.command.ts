import { backToMenu } from "@actions/menu.action";
import { emptyReferralButtons, hasReferralButtons } from "@constants/buttons.const";
import { logger } from "@services/logger.service";
import { checkTelegramID } from "@utils/checkTelegramID.util";
import { Context } from "grammy"
import { referralStateManager } from "../states/referralState";

export const referralCommand = async (ctx: Context) => {
    if(!await checkTelegramID(ctx)) {
        return;
    }
    
    // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const telegramId = ctx.from?.id!;

    // –î–∞–Ω–Ω—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã
    const commandData = {
        hasReferral: false,
    };

    const referralStateData = referralStateManager.getReferralState(telegramId);
        
    referralStateData ? commandData.hasReferral = true : commandData.hasReferral = false;

    const referralDescription = `
üë• **–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å—ã!**
–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ **1 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å**. –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å!
–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üåü
    `;

    if (!commandData.hasReferral) {
        // –ï—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç
        await ctx.reply(referralDescription, {
            reply_markup: emptyReferralButtons,
            parse_mode: "Markdown",
        });
    } else {
        // –ï—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç
        await ctx.reply(referralDescription, {
            reply_markup: hasReferralButtons,
            parse_mode: "Markdown",
        });
    }

    await backToMenu(ctx);
}