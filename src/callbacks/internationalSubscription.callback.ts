import { TariffInterface } from "@interfaces/api/tariff.interface";
import { TariffService } from "@services/tariffs.service";
import { createSubscriptionButtons } from "@utils/generateSubscriptionButtons.util";
import { Context, InlineKeyboard } from "grammy";
import { PaymentMethodsEnum } from "../enums/paymentMethod.enum";
import { logger } from "@services/logger.service";
import { InternationalSubscribeCallbacksEnum } from "../enums/subscription.enum";
import { UserInterface } from "@interfaces/api/user.interface";
import { UserStateInterface } from "@interfaces/states/userState.interface";
import { userStateManager } from "../states/userState";
import { UserService } from "@services/user.service";
import { getTimeRemainingInHMS, getTimeRemainingInSeconds } from "@utils/date.util";

export const internationalPaymentCallback = async (ctx: Context) => {
    let internationalSubscriptionKeyboard: InlineKeyboard;

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤
    try {
        const tariffsData: TariffInterface[] | null = await TariffService.getTariffsByPaymentMethod(PaymentMethodsEnum.TELEGRAM_STARS);

        if(tariffsData && tariffsData.length > 0) {
            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            internationalSubscriptionKeyboard = createSubscriptionButtons(tariffsData, PaymentMethodsEnum.TELEGRAM_STARS);

            // –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –æ–ø–ª–∞—Ç—ã
            await ctx.reply(`
üåç *–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars*  
–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –æ–ø–ª–∞—Ç—ã –Ω–∏–∂–µ:`,
                {
                    reply_markup: internationalSubscriptionKeyboard,
                    parse_mode: "Markdown",
                }
            );
        }
        else {
            logger.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞—Ä–∏—Ñ—ã –ø–æ —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç—ã: ${PaymentMethodsEnum.TELEGRAM_STARS}`);

            await ctx.reply(`
üöß *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*  
–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–∞—Ä–∏—Ñ—ã.  
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. üôè
`.trim(), { parse_mode: "Markdown" });
        }
    } catch (error) {
        logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ —Å–ø–æ—Å–æ–±—É –æ–ø–ª–∞—Ç—ã: ${(error as Error).message}`);

        await ctx.reply(`
üöß *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*  
–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É.  
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. üôè
`.trim(), { parse_mode: "Markdown" });

        return;
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    await ctx.answerCallbackQuery();
};

export const handleInternationalSubscription = async (ctx: Context) => {
    const data = ctx.callbackQuery?.data;
    const telegramId = ctx.from?.id!;

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userData: UserInterface | UserStateInterface | undefined | null = userStateManager.getUserState(telegramId);

    if(!userData) {
        userData = await UserService.getUserByTelegramId(telegramId);

        if(!userData) {
            await ctx.reply(`
üöß *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*  
–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—Å.  
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. üôè
`.trim(), { parse_mode: "Markdown" });
                
            return;
        }
    }

    switch (data) {
        case InternationalSubscribeCallbacksEnum.SUBSCRIBE_10_REQUESTS:
            if(userData.subscriptionExpiry && getTimeRemainingInSeconds(userData.subscriptionExpiry) > 0) {
                await ctx.reply(`
üéâ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!  
‚è≥ –í—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${getTimeRemainingInHMS(userData.subscriptionExpiry)}.
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞!
`.trim(), { parse_mode: "Markdown" });

                return;
            }
            
            await ctx.reply("üåü –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É: 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 119 ‚≠êÔ∏è. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –æ–ø–ª–∞—Ç—ã.");
            break;
        case InternationalSubscribeCallbacksEnum.SUBSCRIBE_30_REQUESTS:
            if(userData.subscriptionExpiry && getTimeRemainingInSeconds(userData.subscriptionExpiry) > 0) {
                await ctx.reply(`
üéâ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!  
‚è≥ –í—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${getTimeRemainingInHMS(userData.subscriptionExpiry)}.
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞!
`.trim(), { parse_mode: "Markdown" });

                return;
            }

            await ctx.reply("üåü –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É: 30 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 179 ‚≠êÔ∏è. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –æ–ø–ª–∞—Ç—ã.");
            break;
        case InternationalSubscribeCallbacksEnum.SUBSCRIBE_1_DAY:
            if(userData.subscriptionExpiry && getTimeRemainingInSeconds(userData.subscriptionExpiry) > 0) {
                await ctx.reply(`
üéâ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!  
‚è≥ –í—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${getTimeRemainingInHMS(userData.subscriptionExpiry)}.
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞!
`.trim(), { parse_mode: "Markdown" });

                return;
            }

            await ctx.reply("üåü –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É: 1 –¥–µ–Ω—å (–±–µ–∑–ª–∏–º–∏—Ç) –∑–∞ 299 ‚≠êÔ∏è. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –æ–ø–ª–∞—Ç—ã.");
            break;
        case InternationalSubscribeCallbacksEnum.SUBSCRIBE_7_DAYS:
            if(userData.subscriptionExpiry && getTimeRemainingInSeconds(userData.subscriptionExpiry) > 0) {
                await ctx.reply(`
üéâ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!  
‚è≥ –í—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${getTimeRemainingInHMS(userData.subscriptionExpiry)}.
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞!
`.trim(), { parse_mode: "Markdown" });

                return;
            }

            await ctx.reply("üåü –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É: 7 –¥–Ω–µ–π (–±–µ–∑–ª–∏–º–∏—Ç) –∑–∞ 399 ‚≠êÔ∏è. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –æ–ø–ª–∞—Ç—ã.");
            break;
        case InternationalSubscribeCallbacksEnum.SUBSCRIBE_30_DAYS:
            if(userData.subscriptionExpiry && getTimeRemainingInSeconds(userData.subscriptionExpiry) > 0) {
                await ctx.reply(`
üéâ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!  
‚è≥ –í—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${getTimeRemainingInHMS(userData.subscriptionExpiry)}.
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞!
`.trim(), { parse_mode: "Markdown" });

                return;
            }

            await ctx.reply("üåü –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É: 30 –¥–Ω–µ–π (–±–µ–∑–ª–∏–º–∏—Ç) –∑–∞ 599 ‚≠êÔ∏è. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –æ–ø–ª–∞—Ç—ã.");
            break;
        default:
            await ctx.reply("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.");
            break;
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    await ctx.answerCallbackQuery();
};