import registerActions from "@actions/registerActions";
import { registerCallbacks } from "@callbacks/registerCallbacks";
import registerCommands from "@commands/registerCommands";
import { logger } from "@services/logger.service";
import { Bot } from "grammy";
import { registerWebhook } from "../webhooks/registerWebhook";

export const initConfig = async (bot: Bot) => {
    try {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        await bot.api.setMyDescription(`–ü—Ä–∏–≤–µ—Ç! –Ø —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Ä–∞—Å–∫–ª–∞–¥–∞—Ö –¢–∞—Ä–æ. –ù–∞–∂–º–∏—Ç–µ "Start", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!`);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        await bot.api.setMyCommands([
            { command: "start", description: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞" },
            { command: "new_spread", description: "üîÆ –ù–æ–≤—ã–π —Ä–∞—Å–∫–ª–∞–¥" },
            { command: "bonus", description: "üéÅ –ë–æ–Ω—É—Å—ã" },
            { command: "subscription", description: "üíé –ü–æ–¥–ø–∏—Å–∫–∞" },
            { command: "custom_spread", description: "üóì –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥" },
            { command: "support", description: "üì© –ü–æ–¥–¥–µ—Ä–∂–∫–∞" },
            { command: "referral", description: "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞" },
            { command: "about_tarot", description: "üìñ –û –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ" }
        ]);
    }
    catch (error) {
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –æ–ø–∏—Å–∞–Ω–∏—è –∏–ª–∏ –∫–æ–º–∞–Ω–¥: ", error);
    }

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    registerCommands(bot);

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    registerActions(bot);

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω—ã–µ –≤—ã–∑–æ–≤—ã
    registerCallbacks(bot);

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º webhook
    try {
        await registerWebhook();
    } catch (error) {
        logger.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–µ–±—Ö—É–∫. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å.');
        
        process.exit(1);
    }
}