import { TariffInterface } from "@interfaces/api/tariff.interface";
import { InlineKeyboard } from "grammy";
import { PaymentMethodsEnum } from "../enums/paymentMethod.enum";

export const createSubscriptionButtons = (tariffs: TariffInterface[], paymentMethodId: PaymentMethodsEnum) => {
    const keyboard = new InlineKeyboard();

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ —Ü–µ–Ω–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    const sortedTariffs: TariffInterface[] = tariffs.sort(
        (a: TariffInterface, b: TariffInterface) => Number(a.price) - Number(b.price)
    );

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
    sortedTariffs.forEach(tariff => {
        if (tariff.isActive) {
            keyboard.add({
                text: `${tariff.name}`,
                callback_data: tariff.callback,
            }).row();
        }
    });

    if(paymentMethodId === PaymentMethodsEnum.UKASSA) {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –æ–ø–ª–∞—Ç–∞"
        keyboard.add({
            text: "üåç –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –æ–ø–ª–∞—Ç–∞",
            callback_data: "international_payment",
        });
    }

    return keyboard;
};